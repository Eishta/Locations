{"version":3,"sources":["location/service/DexieService.js","location/Locations/LocationPage/noLocation.js","location/Locations/staticData/columns.js","location/Locations/LocationPage/TableHead/EnhancedTableHead.js","location/Locations/LocationPage/locationList.js","location/Locations/locations.js","location/AddAddress/FacilityTimes/toggle.js","location/AddAddress/FacilityTimes/facilityGrid.js","location/AddAddress/FacilityTimes/facilityTimes.js","location/AddAddress/AddressItem/AddressField.js","location/AddAddress/AddressItem/AddressSelect.js","location/AddAddress/data/state.js","location/AddAddress/Errors/errors.js","location/AddAddress/addAddress.js","location/Header/header.js","App.js","serviceWorker.js","index.js"],"names":["db","Dexie","version","stores","locations","Service","table","toArray","location","add","id","get","update","delete","noLocation","react_default","a","createElement","style","margin","marginTop","backgroundColor","width","height","borderRadius","fontFamily","src","process","alt","columns","label","minWidth","maxWidth","align","format","value","toLocaleString","EnhancedTableHead","props","classes","order","orderBy","onRequestSort","TableHead","TableRow","map","headCell","TableCell","key","numeric","padding","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","StyledTableRow","withStyles","root","background","border","color","boxShadow","useStyles","makeStyles","container","maxHeight","overflow","clip","position","top","descendingComparator","b","LocationList","_ref","setState","deleteLoc","state","_React$useState","React","useState","_React$useState2","Object","slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","setOrder","_React$useState7","_React$useState8","setOrderBy","TableContainer","Table","TableHead_EnhancedTableHead","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","hover","role","tabIndex","column","concat","react_router_dom","to","Edit_default","alert","Delete_default","TablePagination","display","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","target","useEffect","getList","getAll","then","list","loc","address","concatAdd","phone","values","filter","Boolean","join","Fragment","newList","LocationPage_noLocation","Toggle","onChange","meridiem","setMeridiem","bundle_default","start","end","marginRight","step","ToggleButtonGroup","size","exclusive","newMeridiem","persist","aria-label","ToggleButton","fontSize","fontWeight","FacilityGrid","days","_this$props","this","handleChange","handleClose","handleChangeTimeFrom","handleChangeTimeTo","handleChangeAll","saveFacilityTimes","gridRow","Grid","item","xs","sm","FormControlLabel","control","Checkbox","checked","check","e","name","from","textAlignLast","Button","variant","Paper","paper","spacing","Component","theme","formControl","shadows","left","transform","facilityTimes","setFacility","facility","open","setOpen","convertToFormat","sec","dateObj","Date","getUTCHours","toString","padStart","getUTCMinutes","TextField","fullWidth","InputLabelProps","shrink","Modal","disableBackdropClick","aria-labelledby","aria-describedby","facilityGrid_FacilityGrid","objectSpread","defineProperty","_state$row","stateClone","JSON","parse","stringify","day","AddressField","defaultValue","inputProps","required","_useState","_useState2","error","setError","_useState3","_useState4","helperText","setHelperText","match","isNaN","arguments","undefined","replace","part1","substring","part2","part3","formatUSNumber","AddressSelect","options","select","SelectProps","native","option","states","timeZone","Errors","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","errors","modal","flexGrow","AddAddress","history","tags","setTags","setLoc","_useState5","_useState6","setPhone","_useState7","sun","mon","tues","wed","thurs","fri","sat","_useState8","_useState9","_useState10","aptPool","setAptPool","_useState11","add1","suite","add2","city","zip","tZone","_useState12","setAddress","_useState13","_useState14","_useState15","_useState16","setErrors","useLayoutEffect","params","split","editLocation","push","Chip","AddressItem_AddressField","AddressItem_AddressSelect","minLength","maxLength","textDecoration","errorsClone","toConsumableArray","validate","put","Errors_errors","title","breakpoints","up","inputRoot","inputInput","paddingLeft","transition","transitions","create","&:focus","Header","AppBar","Toolbar","Typography","noWrap","App","react_router","path","exact","Location","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"4MAGMA,EAAK,UAAIC,GAAM,eACrBD,EAAGE,QAAQ,GAAGC,OAAO,CAAEC,UAAW,wBAyBrBC,EAAU,qGApBf,OAAOL,EAAGM,MAAM,aACXC,sCAELC,GACA,OAAOR,EAAGM,MAAM,aACXG,IAAID,+BAETE,GACA,OAAOV,EAAGM,MAAM,aAAaK,IAAID,kCAE9BA,EAAIF,GACP,OAAOR,EAAGM,MAAM,aACXM,OAAOF,EAAIF,kCAEbE,GACH,OAAOV,EAAGM,MAAM,aACXO,OAAOH,aCbLI,EAVI,WACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAQ,SAAUC,UAAW,QAASC,gBAAiB,YAAaC,MAAO,MAAOC,OAAQ,QAASC,aAAc,MAAOC,WAAY,eAChJV,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,mCAAmDC,IAAI,sBACjEb,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,0HCPOY,EAAU,CACnB,CAAEnB,GAAI,WAAYoB,MAAO,WAAYC,SAAU,KAC/C,CAAErB,GAAI,UAAWoB,MAAO,UAAWC,SAAU,KAC7C,CACErB,GAAI,QACJoB,MAAO,YACPC,SAAU,GACVC,SAAU,GACVC,MAAO,OACPC,OAAQ,SAACC,GAAD,OAAWA,EAAMC,eAAe,wEC0C7BC,EA1CQ,SAACC,GAAS,IACvBC,EAA2CD,EAA3CC,QAASC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,QAASC,EAAkBJ,EAAlBI,cAKjC,OACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACGf,EAAQgB,IAAI,SAACC,GAAD,OACX/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACEC,IAAKF,EAASpC,GACduB,MAAOa,EAASG,QAAU,QAAU,OACpCC,QAASJ,EAASK,eAAiB,OAAS,UAC5CC,cAAeX,IAAYK,EAASpC,IAAK8B,GAEzCzB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,OAAQb,IAAYK,EAASpC,GAC7B6C,UAAWd,IAAYK,EAASpC,GAAK8B,EAAQ,MAC7CgB,SAjBeC,EAiBYX,EAASpC,GAjBR,SAACgD,GACvChB,EAAcgB,EAAOD,MAkBVX,EAAShB,MACTW,IAAYK,EAASpC,GACpBK,EAAAC,EAAAC,cAAA,QAAM0C,UAAWpB,EAAQqB,gBACZ,SAAVpB,EAAmB,oBAAsB,oBAE1C,OAxBU,IAACiB,OCKzBI,EAAiBC,YAAW,CAChCC,KAAM,CACJC,WAAY,QACZxC,aAAc,GACdyC,OAAQ,mCACRC,MAAO,QACP3C,OAAQ,GACR2B,QAAS,SACTiB,UAAW,0CARQL,CAWpBlB,KACGwB,EAAYC,YAAW,CAC3BN,KAAM,CACJzC,MAAO,QAETgD,UAAW,CACTC,UAAW,IACXC,SAAU,WAEZZ,eAAgB,CACdK,OAAQ,EACRQ,KAAM,gBACNlD,OAAQ,EACRJ,QAAS,EACTqD,SAAU,SACVtB,QAAS,EACTwB,SAAU,WACVC,IAAK,GACLrD,MAAO,KAGX,SAASsD,EAAqB5D,EAAG6D,EAAGpC,GAClC,OAAIoC,EAAEpC,GAAWzB,EAAEyB,IACT,EAENoC,EAAEpC,GAAWzB,EAAEyB,GACV,EAEF,EAmBM,SAASqC,EAATC,GAAsDA,EAA9BC,SAA8B,IAApBC,EAAoBF,EAApBE,UAAWC,EAASH,EAATG,MACpD3C,EAAU6B,IADmDe,EAE3CC,IAAMC,SAAS,GAF4BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE5DM,EAF4DH,EAAA,GAEtDI,EAFsDJ,EAAA,GAAAK,EAG7BP,IAAMC,SAAS,IAHcO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAG5DE,EAH4DD,EAAA,GAG/CE,EAH+CF,EAAA,GAAAG,EAIzCX,IAAMC,SAAS,OAJ0BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAI5DvD,EAJ4DwD,EAAA,GAIrDC,EAJqDD,EAAA,GAAAE,EAKrCd,IAAMC,SAAS,YALsBc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAK5DzD,EAL4D0D,EAAA,GAKnDC,EALmDD,EAAA,GAoBnE,OACEpF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAgB1C,UAAWpB,EAAQ+B,WACjCvD,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACEvF,EAAAC,EAAAC,cAACsF,EAAD,CACMhE,QAASA,EACTC,MAAOA,EACPC,QAASA,EACTC,cAbc,SAACgB,EAAOD,GAEhCwC,EADcxD,IAAYgB,GAAsB,QAAVjB,EACrB,OAAS,OAC1B4D,EAAW3C,MAYP1C,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KAvCR,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAM5D,IAAI,SAAC+D,EAAIC,GAAL,MAAe,CAACD,EAAIC,KAMrD,OALAF,EAAeG,KAAK,SAAC9F,EAAG6D,GACtB,IAAMrC,EAAQkE,EAAW1F,EAAE,GAAI6D,EAAE,IACjC,OAAc,IAAVrC,EAAoBA,EACjBxB,EAAE,GAAK6D,EAAE,KAEX8B,EAAe9D,IAAI,SAAC+D,GAAD,OAAQA,EAAG,KAiC5BG,CAAW7B,EAAM9E,UA9C5B,SAAuBoC,EAAOC,GAC5B,MAAiB,SAAVD,EACH,SAACxB,EAAG6D,GAAJ,OAAUD,EAAqB5D,EAAG6D,EAAGpC,IACrC,SAACzB,EAAG6D,GAAJ,OAAWD,EAAqB5D,EAAG6D,EAAGpC,IA2CLuE,CAAcxE,EAAOC,IACjDwE,MAAMxB,EAAOI,EAAaJ,EAAOI,EAAcA,GAAahD,IAAI,SAACqE,GAChE,OACEnG,EAAAC,EAAAC,cAAC4C,EAAD,CAAgB3C,MAAO,CAAEG,gBAAiB,QAAS4C,OAAQ,yBAA2BkD,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAGrE,IAAKkE,EAAIxG,IAChImB,EAAQgB,IAAI,SAACyE,GACZ,IAAMnF,EAAQ+E,EAAII,EAAO5G,IACzB,OACEK,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAWC,IAAKsE,EAAO5G,GAAIuB,MAAOqF,EAAOrF,OACtCqF,EAAOpF,QAA2B,kBAAVC,EAAqBmF,EAAOpF,OAAOC,GAASA,KAI3EpB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAWC,IAAG,UAAAuE,OAAYL,EAAIxG,IAAMuB,MAAM,SACxClB,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GAAE,eAAAF,OAAiBL,EAAIxG,KAAMK,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,CAAUwC,QAAS,WAAQmE,MAAM,OAAST,EAAIxG,QACjFK,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAAYwC,QAAS,kBAAMyB,EAAUiC,EAAIxG,aAOrDK,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CACE3G,MAAO,CAAE4G,QAAS,eAClBC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO/C,EAAM9E,UAAU8H,OACvBrC,YAAaA,EACbJ,KAAMA,EACN0C,aAnDmB,SAACzE,EAAO0E,GAC/B1C,EAAQ0C,IAmDJC,oBAjD0B,SAAC3E,GAC/BoC,GAAgBpC,EAAM4E,OAAOnG,OAC7BuD,EAAQ,OChFG,SAASlF,IAAW,IAAA2E,EACPC,IAAMC,SAAS,CAAEjF,UAAW,KADrBkF,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAC1BD,EAD0BI,EAAA,GACnBN,EADmBM,EAAA,GAGjCiD,oBAAU,WACRC,KACC,IAKH,IAAMA,EAAS,WACbnI,EAAQoI,SAASC,KAAK,SAAAtI,GACpB,IAAIuI,EAAOvI,EAAUyC,IAAI,SAAA+F,GACvB,MAAO,CACLlI,GAAIkI,EAAIlI,GACRF,SAAUoI,EAAIpI,SACdqI,QAASD,EAAIC,QAASC,EAAUF,EAAIC,SAAU,GAC9CE,MAAOH,EAAIG,SAGf/D,EAAS,CAAE5E,UAAWuI,OAQpBG,EAAY,SAACD,GACjB,OAAOtD,OAAOyD,OAAOH,GAASI,OAAOC,SAASC,KAAK,OAcrD,OACEpI,EAAAC,EAAAC,cAACF,EAAAC,EAAMoI,SAAP,KAC4B,IAA3BlE,EAAM9E,UAAU8H,OACfnH,EAAAC,EAAAC,cAAC6D,EAAD,CAAcE,SAAUA,EAAUE,MAAOA,EAAOD,UAVlC,SAACvE,GACjBL,EAAQQ,OAAOH,GAAIgI,KAAK,WACtB,IAAMW,EAAUnE,EAAM9E,UAAU6I,OAAO,SAACzI,GAAD,OAAcA,EAASE,KAAOA,IACrEsE,EAAS,CAAE5E,UAAWiJ,SAQtBtI,EAAAC,EAAAC,cAACqI,EAAD,kIC9CS,SAASC,EAATxE,GAAmC,IAAlB5C,EAAkB4C,EAAlB5C,MAAOqH,EAAWzE,EAAXyE,SAAWrE,EAChBC,IAAMC,SAAS,MADCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACzCsE,EADyCnE,EAAA,GAC/BoE,EAD+BpE,EAAA,GAOhD,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0I,EAAA3I,EAAD,CAAY4I,MAAM,QAAQC,IAAI,QAAQ3I,MAAO,CAAE4I,YAAa,OAASC,KAAM,GAAI7H,OAAQ,GAAIsH,SAAUA,EAAUrH,MAAOA,IACtHpB,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CACEC,KAAK,QACL9H,MAAOsH,EACPS,WAAS,EACTV,SAZiB,SAAC9F,EAAOyG,GAC7BzG,EAAM0G,UACNV,EAAYS,IAWRE,aAAW,kBAEXtJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAcpJ,MAAO,CAAEC,OAAQ,MAAO+B,QAAS,MAAOqH,SAAU,MAAOC,WAAY,QAAWrI,MAAM,MAApG,MAGApB,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAcpJ,MAAO,CAAEC,OAAQ,MAAO+B,QAAS,MAAOqH,SAAU,MAAOC,WAAY,QAAWrI,MAAM,MAApG,YCjBasI,6MAEjBC,KAAO,CAAC,MAAO,MAAO,OAAQ,MAAO,QAAS,MAAO,+EAE5C,IAAAC,EAC+HC,KAAKtI,MAAjIuI,EADHF,EACGE,aAAcC,EADjBH,EACiBG,YAAaC,EAD9BJ,EAC8BI,qBAAsBC,EADpDL,EACoDK,mBAAoBC,EADxEN,EACwEM,gBAAiB/F,EADzFyF,EACyFzF,MAAO3C,EADhGoI,EACgGpI,QAAS2I,EADzGP,EACyGO,kBAC1GC,EAAUP,KAAKF,KAAK7H,IAAI,SAAAqE,GACxB,OACInG,EAAAC,EAAAC,cAACF,EAAAC,EAAMoI,SAAP,CAAgBpG,IAAKkE,GACjBnG,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClBxK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CACIC,QAAS1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAUC,QAASzG,EAAMgC,GAAK0E,MAAOpC,SAAU,SAACqC,GAAD,OAAOhB,EAAagB,EAAG3E,IAAMhG,MAAO,CAAEqJ,SAAU,OAAQrH,QAAS,MAAO/B,OAAQ,OAAS2K,KAAK,UACtJhK,MAAOf,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEqJ,SAAU,OAAQrH,QAAS,MAAO/B,OAAQ,QAAU+F,MAGlFnG,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClBxK,EAAAC,EAAAC,cAACsI,EAAD,CAAQpH,MAAO+C,EAAMgC,GAAK6E,KAAMD,KAAK,OAAOtC,SAAU,SAACqC,GAAD,OAAOd,EAAqBc,EAAG3E,OAEzFnG,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAClBxK,EAAAC,EAAAC,cAACsI,EAAD,CAAQpH,MAAO+C,EAAMgC,GAAKO,GAAIqE,KAAK,KAAKtC,SAAU,SAACqC,GAAD,OAAOb,EAAmBa,EAAG3E,OAEnFnG,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGrK,MAAO,CAAE8K,cAAe,QAC7CjL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQC,QAAQ,WAAWhL,MAAO,CAAEqJ,SAAU,MAAOC,WAAY,OAAQtH,QAAS,MAAO/B,OAAQ,OAAS+C,MAAM,UAAUV,QAAS,kBAAMyH,EAAgB/D,KAAzJ,4BAOhB,OACInG,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAOxI,UAAWpB,EAAQ6J,OAEtBrL,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAM9G,WAAS,EAAC+H,QAAS,GACrBtL,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAAf,mBACCH,EACDpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIpK,MAAO,CAAE8K,cAAe,QACvCjL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,MAAM,YAAYhD,MAAO,CAAEC,OAAQ,OAASqC,QAASsH,GAAjF,UAGA/J,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,MAAM,UAAUV,QAAS0H,GAArD,kBAvCkB9F,IAAMkH,oBCH1ClI,GAAYC,YAAW,SAACkI,GAAD,MAAY,CACvCxI,KAAM,CACJ+D,QAAS,QAEX0E,YAAa,CACXrL,OAAQoL,EAAMF,QAAQ,IAExBD,MAAO,CACLlJ,QAASqJ,EAAMF,QAAQ,EAAG,EAAG,GAC7BlL,OAAQ,OACRG,MAAO,MACP6C,UAAWoI,EAAME,QAAQ,GACzB9H,IAAK,MACL+H,KAAM,MACNC,UAAW,yBAIA,SAASC,GAAT7H,GAAgD,IAAxB8H,EAAwB9H,EAAxB8H,YAAaC,EAAW/H,EAAX+H,SAC5CvK,EAAU6B,KAD6Ce,EAErCC,IAAMC,UAAS,GAFsBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEtD4H,EAFsDzH,EAAA,GAEhD0H,EAFgD1H,EAAA,GAAAK,EAGnCP,IAAMC,SAASyH,GAHoBlH,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGtDT,EAHsDU,EAAA,GAG/CZ,EAH+CY,EAAA,GASvDqH,EAAkB,SAACC,GACvB,IAAIC,EAAU,IAAIC,KAAW,IAANF,GAEvB,OAAOC,EAAQE,cAAcC,WAAWC,SAAS,EAAG,KAChD,IAAMJ,EAAQK,gBAAgBF,WAAWC,SAAS,EAAG,MAYrDzC,EAAc,WAClBkC,GAAQ,IAiDV,OAEEjM,EAAAC,EAAAC,cAAA,OAAK0C,UAAWpB,EAAQwB,MACtBhD,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CACE/M,GAAG,sBACHoB,MAAM,iBACNZ,MAAO,CAAEC,OAAQ,GACjBuM,WAAS,EACTvM,OAAO,SACPwM,gBAAiB,CACfC,QAAQ,GAEVpK,QArEa,WACjBwB,EAAS8H,GACTE,GAAQ,MAqENjM,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CACEd,KAAMA,EACNe,sBAAsB,EACtBC,kBAAgB,qBAChBC,mBAAiB,4BAEjBjN,EAAAC,EAAAC,cAACF,EAAAC,EAAMoI,SAAP,KACErI,EAAAC,EAAAC,cAACgN,EAAD,CAAcpD,aA/CD,SAACnH,EAAOwD,GAC3BlC,EAASO,OAAA2I,EAAA,EAAA3I,CAAA,GAAKL,EAANK,OAAA4I,EAAA,EAAA5I,CAAA,GAAc2B,EAAd3B,OAAA2I,EAAA,EAAA3I,CAAA,GAAyBL,EAAMgC,GAA/B,CAAqC0E,MAAOlI,EAAM4E,OAAOqD,cA8CjBb,YAAaA,EAAa5F,MAAOA,EAAO3C,QAASA,EAAS2I,kBAzBnF,WACvB2B,EAAY3H,GACZ4F,KAwBQE,mBAhCiB,SAACtH,EAAOwD,GACjClC,EAASO,OAAA2I,EAAA,EAAA3I,CAAA,GAAKL,EAANK,OAAA4I,EAAA,EAAA5I,CAAA,GAAc2B,EAAd3B,OAAA2I,EAAA,EAAA3I,CAAA,GAAyBL,EAAMgC,GAA/B,CAAqCO,GAAIwF,EAAgBvJ,SA+BjBqH,qBAxCrB,SAACrH,EAAOwD,GACnClC,EAASO,OAAA2I,EAAA,EAAA3I,CAAA,GAAKL,EAANK,OAAA4I,EAAA,EAAA5I,CAAA,GAAc2B,EAAd3B,OAAA2I,EAAA,EAAA3I,CAAA,GAAyBL,EAAMgC,GAA/B,CAAqC6E,KAAMkB,EAAgBvJ,SAuCyBuH,gBAhEtE,SAAC/D,GAAQ,IAAAkH,EACZlJ,EAAMgC,GAAnB6E,EADyBqC,EACzBrC,KAAMtE,EADmB2G,EACnB3G,GACR4G,EAAaC,KAAKC,MAAMD,KAAKE,UAAUtJ,IAC3C,IAAK,IAAIuJ,KAAOJ,EACVA,EAAWI,GAAK7C,QAClByC,EAAWI,GAAK1C,KAAOA,EACvBsC,EAAWI,GAAKhH,GAAKA,GAGzBzC,EAASqJ,SCiCEK,OA/Ff,SAAsBpM,GAAO,IAEjBgJ,EAA2EhJ,EAA3EgJ,GAAIxJ,EAAuEQ,EAAvER,MAAOpB,EAAgE4B,EAAhE5B,GAAIiO,EAA4DrM,EAA5DqM,aAAcC,EAA8CtM,EAA9CsM,WAAY/D,EAAkCvI,EAAlCuI,aAAcgE,EAAoBvM,EAApBuM,SAAU1M,EAAUG,EAAVH,MAFhD2M,EAICzJ,oBAAS,GAJV0J,EAAAxJ,OAAAC,EAAA,EAAAD,CAAAuJ,EAAA,GAIlBE,EAJkBD,EAAA,GAIXE,EAJWF,EAAA,GAAAG,EAKW7J,mBAAS,IALpB8J,EAAA5J,OAAAC,EAAA,EAAAD,CAAA2J,EAAA,GAKlBE,EALkBD,EAAA,GAKNE,EALMF,EAAA,GA+DzB,OACIpO,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAIA,GACXvK,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CACI/M,GAAIA,EACJoB,MAAOA,EACPZ,MAAO,CAAEC,OAAQ,GACjBuM,WAAS,EACT5B,KAAMpL,EACNyB,MAAOA,EACPyM,WAAYA,EACZD,aAAcA,EACdxN,OAAO,SACP6N,MAAOA,EACPH,SAAUA,EACVO,WAAYA,EACZ5F,SA7CO,SAACqC,GAChB,OAAQA,EAAEvD,OAAOwD,MACb,IAAK,MACsBD,EAAEvD,OAAOnG,MAvB3BmN,MADC,kBA6BFzE,EAAagB,IAJboD,GAAS,GACTI,EAAc,qCAKlB,MAEJ,IAAK,QACD,GAAIE,MAAM1D,EAAEvD,OAAOnG,OAAQ,CACvB8M,GAAS,GACTI,EAAc,wBACd,MAGA,OAAOxE,EAAagB,EAhCpC,WAAoC,IAC1ByD,GAD0BE,UAAAtH,OAAA,QAAAuH,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IAEvBE,QAAQ,OAAQ,IAAIA,QAAQ,KAAM,IAClCJ,MAAM,2BAA2B,GAChCK,EAAQL,EAAMpH,OAAS,EAAf,IAAAX,OAAuB+H,EAAMM,UAAU,EAAG,GAA1C,KAAkDN,EAC1DO,EAAQP,EAAMpH,OAAS,EAAf,IAAAX,OAAuB+H,EAAMM,UAAU,EAAG,IAAO,GACzDE,EAAQR,EAAMpH,OAAS,EAAf,IAAAX,OAAuB+H,EAAMM,UAAU,EAAG,KAAQ,GAChE,SAAArI,OAAUoI,GAAVpI,OAAkBsI,GAAlBtI,OAA0BuI,GAyBSC,CAAelE,EAAEvD,OAAOnG,MAAMmL,aAI7D,QACI2B,GAAS,GACTI,EAAc,IACdxE,EAAagB,KAoBb8B,gBAAiB,CACbC,QAAQ,OC1CboC,OArCf,SAAuB1N,GAAO,IAClBgJ,EAAgDhJ,EAAhDgJ,GAAIxJ,EAA4CQ,EAA5CR,MAAOpB,EAAqC4B,EAArC5B,GAAIuP,EAAiC3N,EAAjC2N,QAAS9N,EAAwBG,EAAxBH,MAAQ0I,EAAgBvI,EAAhBuI,aACxC,OACI9J,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAIA,GACXvK,EAAAC,EAAAC,cAACwM,EAAA,EAAD,CACI/M,GAAIA,EACJoB,MAAOA,EACPZ,MAAO,CAAEC,OAAQ,GACjBuM,WAAS,EACTwC,QAAM,EACN/N,MAAOA,EACPqH,SAAUqB,EACV1J,OAAO,SACPgP,YAAa,CACTC,QAAQ,IAGXH,EAAQpN,IAAI,SAACwN,GAAD,OACTtP,EAAAC,EAAAC,cAAA,UAAQ+B,IAAKqN,EAAOlO,MAAOA,MAAOkO,EAAOlO,OACpCkO,EAAOvO,sBCzBnBwO,GAAS,CAClB,CAAExO,MAAO,GAAIK,MAAO,IACpB,CAAEL,MAAO,iBAAkBK,MAAO,kBAClC,CAAEL,MAAO,oBAAqBK,MAAO,qBACrC,CAAEL,MAAO,QAASK,MAAO,SACzB,CAAEL,MAAO,QAASK,MAAO,SACzB,CAAEL,MAAO,eAAgBK,MAAO,gBAChC,CAAEL,MAAO,MAAOK,MAAO,OACvB,CAAEL,MAAO,UAAWK,MAAO,WAC3B,CAAEL,MAAO,UAAWK,MAAO,WAC3B,CAAEL,MAAO,mBAAoBK,MAAO,oBACpC,CAAEL,MAAO,oBAAqBK,MAAO,qBACrC,CAAEL,MAAO,YAAaK,MAAO,aAC7B,CAAEL,MAAO,YAAaK,MAAO,aAC7B,CAAEL,MAAO,SAAUK,MAAO,UAC1B,CAAEL,MAAO,iBAAkBK,MAAO,kBAClC,CAAEL,MAAO,cAAeK,MAAO,eAC/B,CAAEL,MAAO,UAAWK,MAAO,WAC3B,CAAEL,MAAO,YAAaK,MAAO,aAC7B,CAAEL,MAAO,UAAWK,MAAO,WAC3B,CAAEL,MAAO,WAAYK,MAAO,YAC5B,CAAEL,MAAO,SAAUK,MAAO,UAC1B,CAAEL,MAAO,SAAUK,MAAO,UAC1B,CAAEL,MAAO,YAAaK,MAAO,aAC7B,CAAEL,MAAO,SAAUK,MAAO,UAC1B,CAAEL,MAAO,aAAcK,MAAO,cAC9B,CAAEL,MAAO,YAAaK,MAAO,aAC7B,CAAEL,MAAO,UAAWK,MAAO,WAC3B,CAAEL,MAAO,gBAAiBK,MAAO,iBACjC,CAAEL,MAAO,cAAeK,MAAO,eAC/B,CAAEL,MAAO,cAAeK,MAAO,gBAGtBoO,GACT,CACI,CACIzO,MAAO,GACPK,MAAO,IAEX,CACIA,OAAQ,GACRL,MAAO,oCAEX,CACIK,OAAQ,GACRL,MAAO,qCAEX,CACIK,OAAQ,GACRL,MAAO,uBAEX,CACIK,OAAQ,EACRL,MAAO,sBAEX,CACIK,OAAQ,EACRL,MAAO,0CAEX,CACIK,OAAQ,EACRL,MAAO,2CAEX,CACIK,OAAQ,EACRL,MAAO,uDAEX,CACIK,OAAQ,EACRL,MAAO,wDAEX,CACIK,OAAQ,EACRL,MAAO,uDAEX,CACIK,OAAQ,IACRL,MAAO,4BAEX,CACIK,OAAQ,EACRL,MAAO,gDAEX,CACIK,OAAQ,EACRL,MAAO,4BAEX,CACIK,OAAQ,EACRL,MAAO,0CAEX,CACIK,MAAO,EACPL,MAAO,yDAEX,CACIK,MAAO,EACPL,MAAO,mDAEX,CACIK,MAAO,EACPL,MAAO,yCAEX,CACIK,MAAO,EACPL,MAAO,uDAEX,CACIK,MAAO,IACPL,MAAO,sBAEX,CACIK,MAAO,EACPL,MAAO,gDAEX,CACIK,MAAO,IACPL,MAAO,qBAEX,CACIK,MAAO,EACPL,MAAO,0DAEX,CACIK,MAAO,IACPL,MAAO,mDAEX,CACIK,MAAO,KACPL,MAAO,yBAEX,CACIK,MAAO,EACPL,MAAO,sCAEX,CACIK,MAAO,EACPL,MAAO,uCAEX,CACIK,MAAO,EACPL,MAAO,oDAEX,CACIK,MAAO,EACPL,MAAO,qDAEX,CACIK,MAAO,IACPL,MAAO,gCAEX,CACIK,MAAO,GACPL,MAAO,qDAEX,CACIK,MAAO,GACPL,MAAO,wDAEX,CACIK,MAAO,GACPL,MAAO,uDC3IJ0O,GAjBf,SAAAC,GAAA,SAAAD,IAAA,OAAAjL,OAAAmL,EAAA,EAAAnL,CAAAqF,KAAA4F,GAAAjL,OAAAoL,EAAA,EAAApL,CAAAqF,KAAArF,OAAAqL,EAAA,EAAArL,CAAAiL,GAAAK,MAAAjG,KAAA4E,YAAA,OAAAjK,OAAAuL,EAAA,EAAAvL,CAAAiL,EAAAC,GAAAlL,OAAAwL,EAAA,EAAAxL,CAAAiL,EAAA,EAAAxN,IAAA,SAAAb,MAAA,WACa,IAAAwI,EACoCC,KAAKtI,MAAtC0O,EADHrG,EACGqG,OAAQlG,EADXH,EACWG,YAAavI,EADxBoI,EACwBpI,QAC7B,OACIxB,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAOxI,UAAWpB,EAAQ0O,OACrBD,EAAOnO,IAAI,SAACmM,EAAOnI,GAAR,OAAkB9F,EAAAC,EAAAC,cAAA,KAAG+B,IAAM6D,GAAQmI,KAC/CjO,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,MAAM,YAAYhD,MAAO,CAAEC,OAAQ,OAASqC,QAASsH,GAAjF,eANhB0F,EAAA,CAA4BlE,aCatBlI,GAAYC,YAAW,SAACkI,GAAD,MAAY,CACrCxI,KAAM,CACFmN,SAAU,GAEd9E,MAAO,CACHlJ,QAASqJ,EAAMF,QAAQ,GACvBlL,OAAQ,OACRa,SAAU,KAEdiP,MAAO,CACH/N,QAASqJ,EAAMF,QAAQ,EAAG,EAAG,GAC7BlL,OAAQ,OACRG,MAAO,MACP6C,UAAWoI,EAAME,QAAQ,GACzB9H,IAAK,MACL+H,KAAM,MACNC,UAAW,yBAOJ,SAASwE,GAATpM,GAAwC,IAAlBqM,EAAkBrM,EAAlBqM,QAAS9B,EAASvK,EAATuK,MACpC/M,EAAU6B,KADmC0K,EAE3BzJ,mBAAS,IAFkB0J,EAAAxJ,OAAAC,EAAA,EAAAD,CAAAuJ,EAAA,GAE5CuC,EAF4CtC,EAAA,GAEtCuC,EAFsCvC,EAAA,GAAAG,EAG7B7J,mBAAS,IAHoB8J,EAAA5J,OAAAC,EAAA,EAAAD,CAAA2J,EAAA,GAG5CtG,EAH4CuG,EAAA,GAGvCoC,EAHuCpC,EAAA,GAAAqC,EAIzBnM,mBAAS,IAJgBoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAI5CzI,EAJ4C0I,EAAA,GAIrCC,EAJqCD,EAAA,GAAAE,EAKnBtM,mBAAS,CACrCuM,IAAK,CAAEhG,OAAO,EAAOG,KAAM,GAAItE,GAAI,IACnCoK,IAAK,CAAEjG,OAAO,EAAOG,KAAM,GAAItE,GAAI,IACnCqK,KAAM,CAAElG,OAAO,EAAOG,KAAM,GAAItE,GAAI,IACpCsK,IAAK,CAAEnG,OAAO,EAAOG,KAAM,GAAItE,GAAI,IACnCuK,MAAO,CAAEpG,OAAO,EAAOG,KAAM,GAAItE,GAAI,IACrCwK,IAAK,CAAErG,OAAO,EAAOG,KAAM,GAAItE,GAAI,IACnCyK,IAAK,CAAEtG,OAAO,EAAOG,KAAM,GAAItE,GAAI,MAZY0K,EAAA5M,OAAAC,EAAA,EAAAD,CAAAoM,EAAA,GAK5C7E,EAL4CqF,EAAA,GAKlCtF,EALkCsF,EAAA,GAAAC,EAcrB/M,mBAAS,IAdYgN,EAAA9M,OAAAC,EAAA,EAAAD,CAAA6M,EAAA,GAc5CE,EAd4CD,EAAA,GAcnCE,EAdmCF,EAAA,GAAAG,EAerBnN,mBAAS,CACnCoN,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,KAAM,GACN1N,MAAO,GACP2N,IAAK,GACLC,MAAO,KAtBwCC,EAAAxN,OAAAC,EAAA,EAAAD,CAAAiN,EAAA,GAe5C3J,EAf4CkK,EAAA,GAenCC,EAfmCD,EAAA,GAAAE,EAwB3B5N,oBAAS,GAxBkB6N,EAAA3N,OAAAC,EAAA,EAAAD,CAAA0N,EAAA,GAwB5ClG,EAxB4CmG,EAAA,GAwBtClG,EAxBsCkG,EAAA,GAAAC,EAyBvB9N,mBAAS,IAzBc+N,EAAA7N,OAAAC,EAAA,EAAAD,CAAA4N,EAAA,GAyB5CnC,EAzB4CoC,EAAA,GAyBpCC,EAzBoCD,EAAA,GA0BnDE,0BAAgB,WACRhE,EAAMiE,OAAO7S,IACbL,EAAQM,KAAK2O,EAAMiE,OAAO7S,IAAIgI,KAAK,SAAClI,GAChC+Q,EAAO/Q,EAASA,UAChBkR,EAASlR,EAASuI,MAAQvI,EAASuI,MAAQ,IAC3CiK,EAAWxS,EAASqI,QAAUrI,EAASqI,QAAU,IACjDgE,EAAYrM,EAASsM,SAAWtM,EAASsM,SAAW,IACpDyF,EAAW/R,EAAS8R,QAAU9R,EAAS8R,QAAU,IACjDhB,EAAQ9Q,EAAS8R,QAAQkB,MAAM,SAGxC,IAKH,IAAM3I,EAAe,SAACnH,GAClBsP,EAAWzN,OAAA2I,EAAA,EAAA3I,CAAA,GAAKsD,EAANtD,OAAA4I,EAAA,EAAA5I,CAAA,GAAgB7B,EAAM4E,OAAO5H,GAAKgD,EAAM4E,OAAOnG,UAgEvDsR,EAAe,WACjBpT,EAAQO,QAAQ0O,EAAMiE,OAAO7S,GAAI,CAAEF,SAAUoI,EAAKC,UAASE,MAAOA,EAAO+D,SAAUA,EAAUwF,QAASA,IAAW5J,KAAK,SAAChI,GACnH0Q,EAAQsC,KAAK,QAGrB,OACI3S,EAAAC,EAAAC,cAAA,OAAK0C,UAAWpB,EAAQwB,MACpBhD,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAOxI,UAAWpB,EAAQ6J,OACtBrL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE4G,QAAS,SAAvB,kBACKuJ,EAAKxO,IAAI,SAAA+D,GACN,OAAO7F,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAM3Q,IAAK4D,EAAI9E,MAAO8E,OAGrC7F,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAM9G,WAAS,EAAC+H,QAAS,EAAG1I,UAAWpB,EAAQ6J,OAC3CrL,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,GAAI5K,GAAG,WAAWoB,MAAM,gBAAgBK,MAAOyG,EAAKiG,UAAU,EAAMhE,aAhE9E,SAACnH,GACrB6N,EAAO7N,EAAM4E,OAAOnG,UAgERpB,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,EAAG5K,GAAG,OAAOoB,MAAM,iBAAiBK,MAAO0G,EAAQ4J,KAAM5H,aAAcA,IACzF9J,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,EAAG5K,GAAG,QAAQoB,MAAM,YAAYK,MAAO0G,EAAQ6J,MAAO7H,aAAcA,IACtF9J,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,EAAG5K,GAAG,OAAOoB,MAAM,iBAAiBK,MAAO0G,EAAQ8J,KAAM9H,aAAcA,IACzF9J,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,EAAG5K,GAAG,OAAOoB,MAAM,OAAOK,MAAO0G,EAAQ+J,KAAM/H,aAAcA,IAC/E9J,EAAAC,EAAAC,cAAC4S,GAAD,CAAevI,GAAI,EAAGxJ,MAAM,QAAQpB,GAAG,QAAQuP,QAASK,GAAQnO,MAAO0G,EAAQ3D,MAAO2F,aAAcA,IACpG9J,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,EAAG5K,GAAG,MAAMoB,MAAM,WAAWK,MAAO0G,EAAQgK,IAAKjE,WAAY,CAAEkF,UAAW,EAAGC,UAAW,IAAMlJ,aAAcA,IAC9H9J,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,EAAG5K,GAAG,QAAQoB,MAAM,YAAYK,MAAO4G,EAAO6F,WAAY,CAAEmF,UAAW,IAAMlJ,aAhErF,SAACnH,EAAOvB,GAC9BuP,EAASvP,MAgEGpB,EAAAC,EAAAC,cAAC4S,GAAD,CAAevI,GAAI,EAAGxJ,MAAM,YAAYpB,GAAG,QAAQyB,MAAO0G,EAAQiK,MAAO7C,QAASM,GAAU1F,aAAcA,IAC1G9J,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACXvK,EAAAC,EAAAC,cAAC2L,GAAD,CAAeC,YAAaA,EAAaC,SAAUA,KAEvD/L,EAAAC,EAAAC,cAAC2S,GAAD,CAActI,GAAI,EAAG5K,GAAG,UAAUoB,MAAM,mBAAmBK,MAAOmQ,EAASzH,aApFnE,SAACnH,GACrB4N,EAAQ5N,EAAM4E,OAAOnG,MAAMqR,MAAM,MACjCjB,EAAW7O,EAAM4E,OAAOnG,UAmFZpB,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIpK,MAAO,CAAE8K,cAAe,QACvCjL,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GAAG,IAAIvG,MAAO,CAAE8S,eAAgB,SAClCjT,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,MAAM,YAAYhD,MAAO,CAAEC,OAAQ,QAA/D,WAIJJ,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,MAAM,UAAUV,QApDjD,YAlBE,WACb,IAAIyQ,EAAW1O,OAAA2O,EAAA,EAAA3O,CAAOyL,GAKtB,OAJmB,IAAfpI,EAAIV,SACJ+L,EAAYP,KAAK,uBACjBL,EAAUY,MAEkB,IAAvBA,EAAY/L,QAajBiM,GAII7E,EAAMiE,OAAO7S,GACb+S,IAGApT,EAAQ+T,IAAI,CAAE5T,SAAUoI,EAAKC,UAASE,QAAO+D,WAAUwF,YAAW5J,KAAK,SAAChI,GACpE0Q,EAAQsC,KAAK,OARrB1G,GAAQ,KAmDSsC,EAAMiE,OAAO7S,GAAK,SAAW,WAK9CK,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CACId,KAAMA,EACNe,sBAAsB,EACtBC,kBAAgB,qBAChBC,mBAAiB,4BAEjBjN,EAAAC,EAAAC,cAACF,EAAAC,EAAMoI,SAAP,KACIrI,EAAAC,EAAAC,cAACoT,GAAD,CAAQrD,OAAQA,EAAQlG,YAxEpB,WAChBkC,GAAQ,GACRqG,EAAU,KAsEoD9Q,QAASA,yCC1LzE6B,GAAYC,YAAW,SAAAkI,GAAK,MAAK,CACnCxI,KAAM,CACFmN,SAAU,EACV/M,UAAW,OACX9C,gBAAiB,6BAErBiT,MAAM/O,OAAA4I,EAAA,EAAA5I,CAAA,CACF2L,SAAU,EACV/M,UAAW,OACX2D,QAAS,QACRyE,EAAMgI,YAAYC,GAAG,MAAQ,CAC1B1M,QAAS,SAGjB2M,UAAW,CACPvQ,MAAO,WAEXwQ,WAAWnP,OAAA4I,EAAA,EAAA5I,CAAA,CACPrC,QAASqJ,EAAMF,QAAQ,EAAG,EAAG,EAAG,GAChCsI,YAAW,cAAApN,OAAgBgF,EAAMF,QAAQ,GAA9B,OACXuI,WAAYrI,EAAMsI,YAAYC,OAAO,SACrCxT,MAAO,QACNiL,EAAMgI,YAAYC,GAAG,MAAQ,CAC1BlT,MAAO,OACPyT,UAAW,CACPzT,MAAO,aAMR,SAAS0T,KACpB,IAAMzS,EAAU6B,KAEhB,OACIrD,EAAAC,EAAAC,cAAA,OAAK0C,UAAWpB,EAAQwB,MACpBhD,EAAAC,EAAAC,cAACgU,GAAA,EAAD,CAAQvQ,SAAS,SAASxD,MAAO,CAAEG,gBAAiB,QAAS6C,MAAO,QAASC,UAAW,SACpFpD,EAAAC,EAAAC,cAACiU,GAAA,EAAD,KACInU,EAAAC,EAAAC,cAACkU,GAAA,EAAD,CAAYxR,UAAWpB,EAAQ+R,MAAOpI,QAAQ,KAAKkJ,QAAM,GAAzD,aAGArU,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GAAG,cAAcvG,MAAO,CAAC8S,eAAgB,SAA/C,IAAyDjT,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQC,QAAQ,YAAYhI,MAAM,UAAUhD,MAAO,CAAE8K,cAAe,MAAOxK,aAAc,QAAzF,mCCrB9D6T,4LAlBX,OACEtU,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,OACb5C,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACIzG,EAAAC,EAAAC,cAAA,OAAK0C,UAAU,eACf5C,EAAAC,EAAAC,cAAC+T,GAAD,OAEEjU,EAAAC,EAAAC,cAACqU,GAAA,EAAD,KACEvU,EAAAC,EAAAC,cAACqU,GAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACxN,UAAWyN,IACjC1U,EAAAC,EAAAC,cAACqU,GAAA,EAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACxN,UAAWmJ,KAC/CpQ,EAAAC,EAAAC,cAACqU,GAAA,EAAD,CAAOC,KAAK,cAAcC,OAAK,EAACxN,UAAWmJ,MAE7CpQ,EAAAC,EAAAC,cAACqU,GAAA,EAAD,CAAU7N,GAAG,eAbT6E,cCIEpD,QACW,cAA7BwM,OAAOlV,SAASmV,UAEe,UAA7BD,OAAOlV,SAASmV,UAEhBD,OAAOlV,SAASmV,SAASrG,MACvB,2DCZNsG,IAASC,OACD9U,EAAAC,EAAAC,cAAC6U,GAAD,MACHC,SAASC,eAAe,SD2HvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzN,KAAK,SAAA0N,GACJA,EAAaC,eAEdC,MAAM,SAAAtH,GACLuH,QAAQvH,MAAMA,EAAMwH","file":"static/js/main.4ee00b9d.chunk.js","sourcesContent":["import Dexie from 'dexie';\r\n\r\n\r\nconst db = new Dexie('LocationsDB');\r\ndb.version(1).stores({ locations: '++id, &location' });\r\n\r\n\r\nclass DBService {\r\n    getAll() {\r\n        return db.table('locations')\r\n            .toArray();\r\n    }\r\n    put(location) {\r\n        return db.table('locations')\r\n            .add(location)\r\n    }\r\n    get(id) {\r\n        return db.table('locations').get(id)\r\n    }\r\n    update(id, location) {\r\n        return db.table('locations')\r\n            .update(id, location)\r\n    }\r\n    delete(id) {\r\n        return db.table('locations')\r\n            .delete(id)\r\n    }\r\n}\r\n\r\nexport const Service = new DBService()","import React from 'react'\r\n\r\nconst noLocation = () => {\r\n  return (\r\n    <div style={{ margin: '0 auto', marginTop: '140px', backgroundColor: '#8080801f', width: '60%', height: '200px', borderRadius: '50%', fontFamily: 'sans-serif' }}>\r\n      <img src={process.env.PUBLIC_URL + '/images/noLocation.jpg'} alt=\"No Location Found\" />\r\n      <h4>Kindly Add Your Location First </h4>\r\n      <p> There is no location added right now</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default noLocation\r\n","export const columns = [\r\n    { id: 'location', label: 'Location', minWidth: 170 },\r\n    { id: 'address', label: 'Address', minWidth: 300 },\r\n    {\r\n      id: 'phone',\r\n      label: 'Phone no.',\r\n      minWidth: 10,\r\n      maxWidth: 12,\r\n      align: 'left',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    }\r\n  ];","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { columns } from '../../staticData/columns';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n const EnhancedTableHead=(props) =>{\r\n    const { classes, order, orderBy, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {columns.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.numeric ? 'right' : 'left'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n  \r\n  EnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n  };\r\n\r\n  export default EnhancedTableHead;","import React from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { columns } from '../staticData/columns';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\nimport EnhancedTableHead from './TableHead/EnhancedTableHead'\r\n\r\n\r\nconst StyledTableRow = withStyles({\r\n  root: {\r\n    background: 'white',\r\n    borderRadius: 20,\r\n    border: '1px solid rgba(224, 224, 224, 1)',\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px  rgba(224, 224, 224, 1)',\r\n  },\r\n\r\n})(TableRow);\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n    overflow: 'visible'\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n});\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function LocationList({ setState, deleteLoc, state }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('location');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  \r\n  return (\r\n    <TableContainer className={classes.container}>\r\n      <Table>\r\n        <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n        <TableBody>\r\n          {stableSort(state.locations, getComparator(order, orderBy))\r\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n            return (\r\n              <StyledTableRow style={{ backgroundColor: 'white', border: '10px solid light-grey' }} hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                {columns.map((column) => {\r\n                  const value = row[column.id];\r\n                  return (\r\n                    <TableCell key={column.id} align={column.align}>\r\n                      {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n                <TableCell key={`button-${row.id}`} align='right'>\r\n                  <Link to={`/addAddress/${row.id}`}><EditIcon onClick={() => { alert('save' + row.id) }} /></Link>\r\n                  <DeleteIcon onClick={() => deleteLoc(row.id)} />\r\n                </TableCell>\r\n              </StyledTableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        style={{ display: 'inline-flex' }}\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={state.locations.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </TableContainer>)\r\n\r\n}\r\n\r\nLocationList.propTypes = {\r\n  state: PropTypes.object.isRequired,\r\n  setState: PropTypes.func.isRequired,\r\n  deleteLoc: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { Service } from '../service/DexieService';\r\nimport NoLocation from './LocationPage/noLocation';\r\nimport LocationList from './LocationPage/locationList'\r\n\r\n\r\nexport default function location() {\r\n  const [state, setState] = React.useState({ locations: [] });\r\n \r\n  useEffect(() => {\r\n    getList();\r\n  }, [])\r\n\r\n  /**\r\n   * Function that does the get request on the table\r\n   */\r\n  const getList =()=> {\r\n    Service.getAll().then(locations => {\r\n      let list = locations.map(loc => {\r\n        return {\r\n          id: loc.id,\r\n          location: loc.location,\r\n          address: loc.address? concatAdd(loc.address): '',\r\n          phone: loc.phone\r\n        }\r\n      })\r\n      setState({ locations: list })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Function to concatinate the fields entered in the \"03. Add Location\"\r\n   * @param {*} address \r\n   */\r\n  const concatAdd = (address) => {\r\n    return Object.values(address).filter(Boolean).join(', ')\r\n  }\r\n\r\n  /**\r\n   * Function called to delete a location\r\n   * @param {*} id \r\n   */\r\n  const deleteLoc = (id) => {\r\n    Service.delete(id).then(() => {\r\n      const newList = state.locations.filter((location) => location.id !== id);\r\n      setState({ locations: newList });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    {state.locations.length !== 0\r\n    ? <LocationList setState={setState} state={state} deleteLoc={deleteLoc}/> \r\n    : <NoLocation/> }\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport PropTypes from 'prop-types';\r\nimport './toggle.css'\r\n\r\nexport default function Toggle({value, onChange}) {\r\n  const [meridiem, setMeridiem] = React.useState('AM');\r\n  const handleMeridiem = (event, newMeridiem) => {\r\n    event.persist()\r\n    setMeridiem(newMeridiem);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TimePicker start=\"00:00\" end=\"23:59\" style={{ marginRight: '2px' }} step={30} format={24} onChange={onChange} value={value} />\r\n      <ToggleButtonGroup\r\n        size=\"small\"\r\n        value={meridiem}\r\n        exclusive\r\n        onChange={handleMeridiem}\r\n        aria-label=\"text alignment\"\r\n      >\r\n        <ToggleButton style={{ margin: '2px', padding: '1px', fontSize: '8px', fontWeight: 'bold', }} value=\"AM\" >\r\n          AM\r\n          </ToggleButton>\r\n        <ToggleButton style={{ margin: '2px', padding: '1px', fontSize: '8px', fontWeight: 'bold', }} value=\"PM\" >\r\n          PM\r\n          </ToggleButton>\r\n\r\n      </ToggleButtonGroup>\r\n\r\n    </div>\r\n  );\r\n}\r\nToggle.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Toggle from './toggle'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport './toggle.css'\r\n\r\nexport default class FacilityGrid extends React.Component {\r\n\r\n    days = ['sun', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat'];\r\n\r\n    render() {\r\n        const { handleChange, handleClose, handleChangeTimeFrom, handleChangeTimeTo, handleChangeAll, state, classes, saveFacilityTimes } = this.props;\r\n        let gridRow = this.days.map(row => {\r\n            return (\r\n                <React.Fragment key={row}>\r\n                    <Grid item xs={3} sm={2} >\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={state[row].check} onChange={(e) => handleChange(e, row)} style={{ fontSize: '12px', padding: '2px', margin: '1px' }} name=\"check\" />}\r\n                            label={<span style={{ fontSize: '12px', padding: '2px', margin: '1px' }}>{row}</span>}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={3} sm={3} >\r\n                        <Toggle value={state[row].from} name=\"from\" onChange={(e) => handleChangeTimeFrom(e, row)} />\r\n                    </Grid>\r\n                    <Grid item xs={3} sm={3}>\r\n                        <Toggle value={state[row].to} name=\"to\" onChange={(e) => handleChangeTimeTo(e, row)} />\r\n                    </Grid>\r\n                    <Grid item xs={3} sm={3} style={{ textAlignLast: 'end' }}>\r\n                        <Button variant=\"outlined\" style={{ fontSize: '8px', fontWeight: 'bold', padding: '2px', margin: '1px' }} color=\"primary\" onClick={() => handleChangeAll(row)}>Apply to All Checked</Button>\r\n                    </Grid>\r\n                </React.Fragment>\r\n\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Paper className={classes.paper}  >\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}> Facility times</Grid>\r\n                    {gridRow}\r\n                    <Grid item xs={12} style={{ textAlignLast: 'end' }}>\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{ margin: '5px' }} onClick={handleClose}>\r\n                            Cancel\r\n                    </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={saveFacilityTimes}>\r\n                            Save\r\n                    </Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Paper>\r\n\r\n        );\r\n    }\r\n}\r\nFacilityGrid.propTypes = {\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    handleChangeTimeFrom: PropTypes.func.isRequired,\r\n    handleChangeTimeTo: PropTypes.func.isRequired,\r\n    handleChangeAll: PropTypes.func.isRequired,\r\n    state: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    saveFacilityTimes: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport FacilityGrid from './facilityGrid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2, 4, 3),\r\n    margin: 'auto',\r\n    width: '50%',\r\n    boxShadow: theme.shadows[5],\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(0%, 20%)'\r\n  },\r\n}));\r\n\r\nexport default function facilityTimes({setFacility, facility}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(facility);\r\n\r\n  /**\r\n   * Converts the seconds into time with format HH:mm\r\n   * @param {*} sec \r\n   */\r\n  const convertToFormat = (sec) => {\r\n    let dateObj = new Date(sec * 1000);\r\n    // moment(new Date(82800000)).utc().format(\"hh:mm a\")\r\n    return dateObj.getUTCHours().toString().padStart(2, '0')\r\n      + ':' + dateObj.getUTCMinutes().toString().padStart(2, '0');\r\n  }\r\n  /**\r\n   * Action called t open the Modal\r\n   */\r\n  const handleOpen = () => {\r\n    setState(facility);\r\n    setOpen(true);\r\n  };\r\n  /**\r\n   * Action called to close the modal\r\n   */\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n/**\r\n * Action called on clicking \"Apply to all checked\" button\r\n * @param {*} row \r\n */\r\n  const handleChangeAll = (row) => {\r\n    let { from, to } = state[row];\r\n    let stateClone = JSON.parse(JSON.stringify(state));\r\n    for (let day in stateClone) {\r\n      if (stateClone[day].check) {\r\n        stateClone[day].from = from;\r\n        stateClone[day].to = to;\r\n      }\r\n    }\r\n    setState(stateClone);\r\n  }\r\n  /**\r\n   * Action called to handle the Checkbox changes\r\n   * @param {*} event \r\n   * @param {*} row \r\n   */\r\n  const handleChange = (event, row) => {\r\n    setState({ ...state, [row]: { ...state[row], check: event.target.checked } });\r\n  };\r\n  /**\r\n   * Action called to handle the changes in \"from\" field of each day\r\n   * @param {*} event \r\n   * @param {*} row \r\n   */\r\n  const handleChangeTimeFrom = (event, row) => {\r\n    setState({ ...state, [row]: { ...state[row], from: convertToFormat(event) } })\r\n  }\r\n  /**\r\n   * Action called to handle the changes in \"to\" field of each day\r\n   * @param {*} event \r\n   * @param {*} row \r\n   */\r\n  const handleChangeTimeTo = (event, row) => {\r\n    setState({ ...state, [row]: { ...state[row], to: convertToFormat(event) } })\r\n  }\r\n  /**\r\n   * Action called on clicking the \"Save\" button on \"04. Location Timings\" Page\r\n   */\r\n  const saveFacilityTimes =()=> {\r\n    setFacility(state);\r\n    handleClose();\r\n  }\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <TextField\r\n        id=\"standard-full-width\"\r\n        label=\"Facility Times\"\r\n        style={{ margin: 8 }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onClick={handleOpen}\r\n      />\r\n      <Modal\r\n        open={open}\r\n        disableBackdropClick={true}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <React.Fragment>\r\n          <FacilityGrid handleChange={handleChange} handleClose={handleClose} state={state} classes={classes} saveFacilityTimes={saveFacilityTimes}\r\n            handleChangeTimeTo={handleChangeTimeTo} handleChangeTimeFrom={handleChangeTimeFrom} handleChangeAll={handleChangeAll}/>\r\n        </React.Fragment>\r\n      </Modal>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\nfacilityTimes.propTypes = {\r\n  facility: PropTypes.object.isRequired,\r\n  setFacility: PropTypes.func.isRequired\r\n};\r\n","import React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddressField(props) {\r\n\r\n    const { xs, label, id, defaultValue, inputProps, handleChange, required, value } = props;\r\n\r\n    const [error, setError] = useState(false);\r\n    const [helperText, setHelperText] = useState('');\r\n\r\n    /**\r\n     * Action to verify the \"Zip Code\" contains only numbers and letters\r\n     * @param {*} value \r\n     */\r\n    const checkAlphanumeric = (value) => {\r\n        var letters = /^[0-9a-zA-Z]+$/;\r\n        return value.match(letters);\r\n    }\r\n\r\n    /**\r\n     * Action to convert the Phone number entered to US format\r\n     * @param {*} entry \r\n     */\r\n    function formatUSNumber(entry = '') {\r\n        const match = entry\r\n            .replace(/\\D+/g, '').replace(/^1/, '')\r\n            .match(/([^\\d]*\\d[^\\d]*){1,10}$/)[0]\r\n        const part1 = match.length > 2 ? `(${match.substring(0, 3)})` : match\r\n        const part2 = match.length > 3 ? ` ${match.substring(3, 6)}` : ''\r\n        const part3 = match.length > 6 ? `-${match.substring(6, 10)}` : ''\r\n        return `${part1}${part2}${part3}`\r\n    }\r\n\r\n    /**\r\n     * Action called on event \"onChange\"\r\n     */\r\n    const onValidate = (e) => {\r\n        switch (e.target.name) {\r\n            case 'zip': {\r\n                if (!checkAlphanumeric(e.target.value)) {\r\n                    setError(true);\r\n                    setHelperText('Only letters and numbers allowed');\r\n                }\r\n                else {\r\n                    handleChange(e);\r\n                }\r\n                break;\r\n            }\r\n            case 'phone': {\r\n                if (isNaN(e.target.value)) {\r\n                    setError(true);\r\n                    setHelperText('Only numbers allowed');\r\n                    break;\r\n                }\r\n                else {\r\n                    return handleChange(e, formatUSNumber(e.target.value.toString()));\r\n                }\r\n            }\r\n\r\n            default: {\r\n                setError(false);\r\n                setHelperText('');\r\n                handleChange(e);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Grid item xs={xs}>\r\n            <TextField\r\n                id={id}\r\n                label={label}\r\n                style={{ margin: 8 }}\r\n                fullWidth\r\n                name={id}\r\n                value={value}\r\n                inputProps={inputProps}\r\n                defaultValue={defaultValue}\r\n                margin=\"normal\"\r\n                error={error}\r\n                required={required}\r\n                helperText={helperText}\r\n                onChange={onValidate}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nAddressField.propTypes = {\r\n    xs: PropTypes.number.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n  };\r\n  \r\n  \r\nexport default AddressField\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction AddressSelect(props) {\r\n    const { xs, label, id, options, value , handleChange} = props;\r\n    return (\r\n        <Grid item xs={xs}>\r\n            <TextField\r\n                id={id}\r\n                label={label}\r\n                style={{ margin: 8 }}\r\n                fullWidth\r\n                select\r\n                value={value}\r\n                onChange={handleChange}\r\n                margin=\"normal\"\r\n                SelectProps={{\r\n                    native: true,\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </option>\r\n                ))}\r\n              \r\n            </TextField>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nAddressSelect.propTypes = {\r\n    xs: PropTypes.number.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired\r\n  };\r\n  \r\nexport default AddressSelect\r\n","export const states = [\r\n    { label: '', value: '' },\r\n    { label: 'Andhra Pradesh', value: 'Andhra Pradesh' },\r\n    { label: 'Arunachal Pradesh', value: 'Arunachal Pradesh' },\r\n    { label: 'Assam', value: 'Assam' },\r\n    { label: 'Bihar', value: 'Bihar' },\r\n    { label: 'Chhattisgarh', value: 'Chhattisgarh' },\r\n    { label: 'Goa', value: 'Goa' },\r\n    { label: 'Gujarat', value: 'Gujarat' },\r\n    { label: 'Haryana', value: 'Haryana' },\r\n    { label: 'Himachal Pradesh', value: 'Himachal Pradesh' },\r\n    { label: 'Jammu and Kashmir', value: 'Jammu and Kashmir' },\r\n    { label: 'Jharkhand', value: 'Jharkhand' },\r\n    { label: 'Karnataka', value: 'Karnataka' },\r\n    { label: 'Kerala', value: 'Kerala' },\r\n    { label: 'Madhya Pradesh', value: 'Madhya Pradesh' },\r\n    { label: 'Maharashtra', value: 'Maharashtra' },\r\n    { label: 'Manipur', value: 'Manipur' },\r\n    { label: 'Meghalaya', value: 'Meghalaya' },\r\n    { label: 'Mizoram', value: 'Mizoram' },\r\n    { label: 'Nagaland', value: 'Nagaland' },\r\n    { label: 'Odisha', value: 'Odisha' },\r\n    { label: 'Punjab', value: 'Punjab' },\r\n    { label: 'Rajasthan', value: 'Rajasthan' },\r\n    { label: 'Sikkim', value: 'Sikkim' },\r\n    { label: 'Tamil Nadu', value: 'Tamil Nadu' },\r\n    { label: 'Telangana', value: 'Telangana' },\r\n    { label: 'Tripura', value: 'Tripura' },\r\n    { label: 'Uttar Pradesh', value: 'Uttar Pradesh' },\r\n    { label: 'Uttarakhand', value: 'Uttarakhand' },\r\n    { label: 'West Bengal', value: 'West Bengal' },\r\n];\r\n\r\nexport const timeZone =\r\n    [\r\n        {\r\n            label: '',\r\n            value: ''\r\n        },\r\n        {\r\n            value: -12,\r\n            label: \"(GMT -12:00) Eniwetok, Kwajalein\"\r\n        },\r\n        {\r\n            value: -11,\r\n            label: \"(GMT -11:00) Midway Island, Samoa\"\r\n        },\r\n        {\r\n            value: -10,\r\n            label: \"(GMT -10:00) Hawaii\"\r\n        },\r\n        {\r\n            value: -9,\r\n            label: \"(GMT -9:00) Alaska\"\r\n        },\r\n        {\r\n            value: -8,\r\n            label: \"(GMT -8:00) Pacific Time (US & Canada)\"\r\n        },\r\n        {\r\n            value: -7,\r\n            label: \"(GMT -7:00) Mountain Time (US & Canada)\"\r\n        },\r\n        {\r\n            value: -6,\r\n            label: \"(GMT -6:00) Central Time (US & Canada), Mexico City\"\r\n        },\r\n        {\r\n            value: -5,\r\n            label: \"(GMT -5:00) Eastern Time (US & Canada), Bogota, Lima\"\r\n        },\r\n        {\r\n            value: -4,\r\n            label: \"(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz\"\r\n        },\r\n        {\r\n            value: -3.5,\r\n            label: \"(GMT -3:30) Newfoundland\"\r\n        },\r\n        {\r\n            value: -3,\r\n            label: \"(GMT -3:00) Brazil, Buenos Aires, Georgetown\"\r\n        },\r\n        {\r\n            value: -2,\r\n            label: \"(GMT -2:00) Mid-Atlantic\"\r\n        },\r\n        {\r\n            value: -1,\r\n            label: \"(GMT -1:00) Azores, Cape Verde Islands\"\r\n        },\r\n        {\r\n            value: 0,\r\n            label: \"(GMT) Western Europe Time, London, Lisbon, Casablanca\"\r\n        },\r\n        {\r\n            value: 1,\r\n            label: \"(GMT +1:00) Brussels, Copenhagen, Madrid, Paris\"\r\n        },\r\n        {\r\n            value: 2,\r\n            label: \"(GMT +2:00) Kaliningrad, South Africa\"\r\n        },\r\n        {\r\n            value: 3,\r\n            label: \"(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg\"\r\n        },\r\n        {\r\n            value: 3.5,\r\n            label: \"(GMT +3:30) Tehran\"\r\n        },\r\n        {\r\n            value: 4,\r\n            label: \"(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi\"\r\n        },\r\n        {\r\n            value: 4.5,\r\n            label: \"(GMT +4:30) Kabul\"\r\n        },\r\n        {\r\n            value: 5,\r\n            label: \"(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent\"\r\n        },\r\n        {\r\n            value: 5.5,\r\n            label: \"(GMT +5:30) Bombay, Calcutta, Madras, New Delhi\"\r\n        },\r\n        {\r\n            value: 5.75,\r\n            label: \"(GMT +5:45) Kathmandu\"\r\n        },\r\n        {\r\n            value: 6,\r\n            label: \"(GMT +6:00) Almaty, Dhaka, Colombo\"\r\n        },\r\n        {\r\n            value: 7,\r\n            label: \"(GMT +7:00) Bangkok, Hanoi, Jakarta\"\r\n        },\r\n        {\r\n            value: 8,\r\n            label: \"(GMT +8:00) Beijing, Perth, Singapore, Hong Kong\"\r\n        },\r\n        {\r\n            value: 9,\r\n            label: \"(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk\"\r\n        },\r\n        {\r\n            value: 9.5,\r\n            label: \"(GMT +9:30) Adelaide, Darwin\"\r\n        },\r\n        {\r\n            value: 10,\r\n            label: \"(GMT +10:00) Eastern Australia, Guam, Vladivostok\"\r\n        },\r\n        {\r\n            value: 11,\r\n            label: \"(GMT +11:00) Magadan, Solomon Islands, New Caledonia\"\r\n        },\r\n        {\r\n            value: 12,\r\n            label: \"(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka\"\r\n        }\r\n\r\n    ];\r\n","import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Errors extends Component {\r\n    render() {\r\n        const { errors, handleClose, classes } = this.props;\r\n        return (\r\n            <Paper className={classes.modal}  >\r\n                {errors.map((error, index) => <p key ={index}>{error}</p>)}\r\n                <Button variant=\"contained\" color=\"secondary\" style={{ margin: '5px' }} onClick={handleClose}>\r\n                    Cancel\r\n                            </Button>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nErrors.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default Errors\r\n","import React, { useState, useLayoutEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport FacilityTimes from './FacilityTimes/facilityTimes';\r\nimport { Link } from 'react-router-dom';\r\nimport AddressField from './AddressItem/AddressField'\r\nimport AddressSelect from './AddressItem/AddressSelect'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Service } from '../service/DexieService';\r\nimport { timeZone, states } from './data/state'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Errors from './Errors/errors'\r\n\r\n/**\r\n * Styles Setting\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        maxWidth: 500,\r\n    },\r\n    modal: {\r\n        padding: theme.spacing(2, 4, 3),\r\n        margin: 'auto',\r\n        width: '50%',\r\n        boxShadow: theme.shadows[5],\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(0%, 20%)'\r\n    }\r\n}));\r\n\r\n/**\r\n * 03. Add Location\r\n */\r\nexport default function AddAddress({ history, match }) {\r\n    const classes = useStyles();\r\n    const [tags, setTags] = useState([])\r\n    const [loc, setLoc] = useState('')\r\n    const [phone, setPhone] = useState('');\r\n    const [facility, setFacility] = useState({\r\n        sun: { check: false, from: '', to: '' },\r\n        mon: { check: false, from: '', to: '' },\r\n        tues: { check: false, from: '', to: '' },\r\n        wed: { check: false, from: '', to: '' },\r\n        thurs: { check: false, from: '', to: '' },\r\n        fri: { check: false, from: '', to: '' },\r\n        sat: { check: false, from: '', to: '' },\r\n    });\r\n    const [aptPool, setAptPool] = useState('');\r\n    const [address, setAddress] = useState({\r\n        add1: '',\r\n        suite: '',\r\n        add2: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        tZone: ''\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    useLayoutEffect(() => {\r\n        if (match.params.id) {\r\n            Service.get(+match.params.id).then((location) => {\r\n                setLoc(location.location);\r\n                setPhone(location.phone ? location.phone : '')\r\n                setAddress(location.address ? location.address : {});\r\n                setFacility(location.facility ? location.facility : {});\r\n                setAptPool(location.aptPool ? location.aptPool : '');\r\n                setTags(location.aptPool.split(','))\r\n            })\r\n        }\r\n    }, []);\r\n    /**\r\n     * Handle the changes in the Address\r\n     * @param {*} event \r\n     */\r\n    const handleChange = (event) => {\r\n        setAddress({ ...address, [event.target.id]: event.target.value });\r\n    };\r\n    /**\r\n     * Handle the changes in the Appointment Pool\r\n     * @param {*} event \r\n     */\r\n    const handleChangeApt = (event) => {\r\n        setTags(event.target.value.split(','));\r\n        setAptPool(event.target.value)\r\n    };\r\n    /**\r\n     * Handle the changes in the Location\r\n     * @param {*} event \r\n     */\r\n    const handleChangeLoc = (event) => {\r\n        setLoc(event.target.value)\r\n    };\r\n    /**\r\n     * Handle the changes in the Phone number\r\n     * @param {*} event \r\n     */\r\n    const handleChangePhone = (event, value) => {\r\n        setPhone(value)\r\n    };\r\n    /**\r\n     * Validates the form before submitting\r\n     */\r\n    const validate = () => {\r\n        let errorsClone = [...errors]\r\n        if (loc.length === 0) {\r\n            errorsClone.push(\"Name can't be empty\");\r\n            setErrors(errorsClone)\r\n        }\r\n        return !(errorsClone.length === 0);\r\n    }\r\n    /**\r\n     * handle the action of closing the modal\r\n     */\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setErrors([]);\r\n    }\r\n    /**\r\n     * Action called on submitting the form\r\n     */\r\n    const submit = () => {\r\n        if (validate()) {\r\n            setOpen(true);\r\n        }\r\n        else {\r\n            if (match.params.id) {\r\n                editLocation();\r\n            }\r\n            else {\r\n                Service.put({ location: loc, address, phone, facility, aptPool }).then((id) => {\r\n                    history.push('/')\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * Action called on Submitting the Form when Editing\r\n     */\r\n    const editLocation = () => {\r\n        Service.update(+match.params.id, { location: loc, address, phone: phone, facility: facility, aptPool: aptPool }).then((id) => {\r\n            history.push('/')\r\n        })\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <div style={{ display: 'flex' }}>  Add Locations\r\n                    {tags.map(el => {\r\n                        return <Chip key={el} label={el} />\r\n                    })}\r\n                </div>\r\n                <Grid container spacing={3} className={classes.paper}>\r\n                    <AddressField xs={12} id=\"location\" label=\"Location Name\" value={loc} required={true} handleChange={handleChangeLoc} />\r\n                    <AddressField xs={6} id=\"add1\" label=\"Address Line 1\" value={address.add1} handleChange={handleChange} />\r\n                    <AddressField xs={6} id=\"suite\" label=\"Suite no.\" value={address.suite} handleChange={handleChange} />\r\n                    <AddressField xs={6} id=\"add2\" label=\"Address Line 2\" value={address.add2} handleChange={handleChange} />\r\n                    <AddressField xs={3} id=\"city\" label=\"City\" value={address.city} handleChange={handleChange} />\r\n                    <AddressSelect xs={3} label=\"State\" id=\"state\" options={states} value={address.state} handleChange={handleChange} />\r\n                    <AddressField xs={3} id=\"zip\" label=\"Zip Code\" value={address.zip} inputProps={{ minLength: 5, maxLength: 10 }} handleChange={handleChange} />\r\n                    <AddressField xs={3} id=\"phone\" label=\"Phone no.\" value={phone} inputProps={{ maxLength: 14 }} handleChange={handleChangePhone} />\r\n                    <AddressSelect xs={6} label=\"Time Zone\" id=\"tZone\" value={address.tZone} options={timeZone} handleChange={handleChange} />\r\n                    <Grid item xs={6}>\r\n                        <FacilityTimes setFacility={setFacility} facility={facility} />\r\n                    </Grid>\r\n                    <AddressField xs={6} id=\"aptPool\" label=\"Appointment Pool\" value={aptPool} handleChange={handleChangeApt} />\r\n                    <Grid item xs={12} style={{ textAlignLast: 'end' }}>\r\n                        <Link to='/' style={{ textDecoration: 'none' }}>\r\n                            <Button variant=\"contained\" color=\"secondary\" style={{ margin: '5px' }}>\r\n                                Cancel\r\n                            </Button>\r\n                        </Link>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={submit}>\r\n                            {match.params.id ? 'Update' : 'Save'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Modal\r\n                open={open}\r\n                disableBackdropClick={true}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <React.Fragment>\r\n                    <Errors errors={errors} handleClose={handleClose} classes={classes} />\r\n                </React.Fragment>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        boxShadow: 'none',\r\n        backgroundColor: 'rgba(224, 224, 224, 0.31)'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        boxShadow: 'none',\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"flex\"\r\n        }\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"12ch\",\r\n            \"&:focus\": {\r\n                width: \"20ch\"\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{ backgroundColor: \"white\", color: 'black', boxShadow: 'none' }}>\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Locations\r\n                    </Typography>\r\n                    <Link to='/addAddress' style={{textDecoration: 'none'}}> <Button variant=\"contained\" color=\"primary\" style={{ textAlignLast: 'end', borderRadius: '25%' }}>\r\n                        +Add Locations\r\n                     </Button>\r\n                    </Link>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Location from './location/Locations/locations'\r\nimport AddAddress from './location/AddAddress/addAddress'\r\nimport Header from './location/Header/header'\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\"\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n            <div className=\"card-header\">\r\n            <Header />\r\n            </div>\r\n              <Switch>\r\n                <Route path='/' exact component={Location} />\r\n                <Route path='/addAddress/:id' exact component={AddAddress} />\r\n                <Route path='/addAddress' exact component={AddAddress} />\r\n              </Switch>\r\n              <Redirect to='/' />\r\n            </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n        <App />\r\n   , document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}